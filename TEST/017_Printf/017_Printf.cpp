// 017_Printf


#include <iostream>
int main()
{
      // 콘솔창에 글자를 띄우는 명령어
      // 일단 사용법만 강의;
      // ctrl + F5
      // printf_s("aaaaaa");


      // char arr[5] = "abc";
      // printf_s(arr);

    // 숫자 1과 문자'1'은 전혀 다른 내용
    {
        // 왜 아래 내용은 안되는 건가?? 5칸의 배열에 5개를 넣었는데?? 답은 아래에서
        // char Arr[5] = "12345";
        char Arr[5] = { '1', '2', '3', '4', '5' };

        // 둘의 자료형이 다르기 때문에 오른쪽에서 왼쪽으로 들어가지 못함
        // char Value1 = Arr;
        
        // 제로베이스 기반.
        // 배열의 개수를 셀 때 0부터 세는것을 제로베이스 기반이라고함
        // [] << 랜덤 인덱스 연산자라고 부름
        // Arr[정수]; => Arr의 시작위치 + (sizeof(자료형) * 정수) 위치의 데이터에 접근한다는 뜻
        char Value1 = Arr[0];
        char Value2 = Arr[1];
        char Value3 = Arr[2];
        char Value4 = Arr[3];
        char Value5 = Arr[4];

        // 이를 출력하면 이상한 값들이 계속 나옴 = 메모리영역 뒤에 비트가 계속 이어지기 때문에 계속 출력하기 때문
        printf_s(Arr);

        // 따라서 규칙을 만듬
        // 제대로 된 글자 배열은 마지막에 무조건 숫자0을 넣기로 함
        // 그래서 아까 char Arr[5] = "12345"; 가 불가능 했던 것 
        // (내생각 : 컴파일러가 제대로 된 글자 배열을 만들려고 {'1', '2', '3', '4', '5', 0}을 넣으려고 했지만 배열크기가 5라서 에러) 
        // "12345"를 넣으려면 배열 6칸이 필요한 것(마지막에 숫자0 이 필요하기 때문)
        // 따라서 char Arr[6] = "12345";로 수정하면 가능

        // char Arr[5] = {'1', '2', '3', '4', '5' }; 는 강제로 마지막 배열에 '5'를 넣은것

        // 문자열 상수 표현식을 사용하면 무조건 마지막에 컴파일러가 0을 붙임

        char ArrTest[10] = "abcdefghi";
        // g값을 가져오고 싶다면?
        char result = ArrTest[6];
    }
}