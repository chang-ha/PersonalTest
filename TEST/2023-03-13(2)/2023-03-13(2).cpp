// 금일 수업 내용 : 함수와 메모리

// 내가 나만의 실행흐름을 만들고 거기에 이름을 붙일 수 있음 = 함수
void Function()
{
    {
        int value = 20;
    }
    {
        int value = 30;
    }
    return;
}

// main scope
int main()
{ // 함수의 시작 = 실행흐름의 시작

    // { } = 스코프(실행흐름)
    // 실행흐름의 시작과 끝을 표현하는 기호.
    // 이렇게 실행흐름을 언제든지 만들 수 있다.
    // 이름이 없는 실행흐름을 만들수도 있음
    
    // UnName scope
    // 이름이 없는 스코프(실행흐름)
    {

    }
    
    // 이름이 없는 실행흐름을 만드는것은 이름이 있는 실행흐름 안에서만 가능
    {
        int value = 100;
    }

    // 위의 이름이없는 스코프에서 만들어진 변수는 스코프가 끝나면 사라지기 때문에
    // 스코프 밖에서는 사용불가능
    // 지역변수 개념과 유사
    // value = 20; << 에러발생, 실행흐름이 끝나면서 해당 변수는 사라졌기 때문
    
    // 함수를 실행하는 방법은 아래와 같음
    Function();
    
    // F10은 그 실행흐름을 한번에 다 실행해버림
    // F11은 다른 이름이 있는 실행흐름 내부로 들어갈 수 있다.

    // 실행후 내 생각
    // F10은 main 실행흐름의 한줄 한줄을 실행하면서 값을 관찰가능
    // F11은 main 실행흐름을 한줄 한줄 실행 도중 다른 실행흐름이 있으면 해당 실행흐름에 들어가서 추가적으로 한줄씩 실행
    
}
// 함수의 끝

// 이렇게 이름이 있는 실행흐름 밖에서 이름이 없는 실행흐름을 만드는건 불가능
// {
//
// }
